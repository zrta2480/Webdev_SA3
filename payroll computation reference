		function computeSalary() {
			var requestParams = "employment_type=" + employmentType.value + "&pay_period=" + payPeriodDropdown.value + "&payroll_period_daily_days=" + document.getElementById("payroll_period_daily_days").value + "&basic_pay=" + document.getElementById("basic_pay").value + "&taxable_allowance=" + document.getElementById("taxable_allowance").value + "&nontaxable_allowance=" + document.getElementById("nontaxable_allowance").value + "&night_differential_hours=" + document.getElementById("night_differential_hours").value + "&night_differential_rate=" + document.getElementById("night_differential_rate").value + "&overtime_hours=" + document.getElementById("overtime_hours").value + "&overtime_rate=" + document.getElementById("overtime_rate").value;
			if (requestParams == params && status == "OK") {
				return;
			}
			params = requestParams;

			const request = new XMLHttpRequest();
			request.open('POST', '/', true);
			request.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
			request.onreadystatechange = function () {
				  if (request.readyState == XMLHttpRequest.DONE) {
					  if (request.status != 200) {
						  alert("Error in computing salary. Please try again.");
						  return;
					  }

					  output = JSON.parse(request.responseText);
					  if (output.status != "OK") {
						  alert("Error in computing salary. Please try again.");
						  return;
					  }
					  status = output.status;
					  regSalary = output.result;
					  altSalary = output.altresult;

					  displaySalary();
				  }
			};
			request.send(params);
		}

		function displaySalary() {
			var multiplier = 1;
			if(document.getElementById("semimonthly_payout").checked) {
				multiplier = 0.5;
			} else if(document.getElementById("annual_payout").checked) {
				multiplier = 12;
			}
			
			var salary = regSalary;
			const rates = document.getElementById("rates").value;
			if (rates == altYear) {
				salary = altSalary;
			}

			document.getElementById("result_basic_pay").innerHTML = formatCurrency(salary.basic_pay * multiplier);
			document.getElementById("result_taxable_allowance").innerHTML = formatCurrency(salary.taxable_allowance * multiplier);
			document.getElementById("result_nontaxable_allowance").innerHTML = formatCurrency(salary.nontaxable_allowance * multiplier);
			document.getElementById("night_differential").innerHTML = formatCurrency(salary.night_differential * multiplier);
			document.getElementById("overtime_pay").innerHTML = formatCurrency(salary.overtime_pay * multiplier);
			document.getElementById("gross_pay").innerHTML = formatCurrency(salary.gross_pay * multiplier);
			document.getElementById("sss_gsis_contribution").innerHTML = formatCurrency(salary.sss_gsis_contribution * multiplier);
			document.getElementById("philhealth_contribution").innerHTML = formatCurrency(salary.philhealth_contribution * multiplier);
			document.getElementById("pagibig_contribution").innerHTML = formatCurrency(salary.pagibig_contribution * multiplier);
			document.getElementById("withholding_tax").innerHTML = formatCurrency(salary.withholding_tax * multiplier);
			document.getElementById("total_deductions").innerHTML = formatCurrency(salary.total_deductions * multiplier);
			document.getElementById("net_pay").innerHTML = formatCurrency(salary.net_pay * multiplier);
			
			if(employmentType.value == "Government Employee") {
				document.getElementById("sss_gsis_contribution_label").innerHTML = "GSIS Contribution";
			} else {
				document.getElementById("sss_gsis_contribution_label").innerHTML = "SSS Contribution";
			}
			
			scrollToTop();
		}
		
		function resetForm() {
			params = "";
			var zero_decimal = "0.00";
			document.getElementById("result_basic_pay").innerHTML = zero_decimal;
			document.getElementById("result_taxable_allowance").innerHTML = zero_decimal;
			document.getElementById("result_nontaxable_allowance").innerHTML = zero_decimal;
			document.getElementById("night_differential").innerHTML = zero_decimal;
			document.getElementById("overtime_pay").innerHTML = zero_decimal;
			document.getElementById("gross_pay").innerHTML = zero_decimal;
			document.getElementById("sss_gsis_contribution").innerHTML = zero_decimal;
			document.getElementById("philhealth_contribution").innerHTML = zero_decimal;
			document.getElementById("pagibig_contribution").innerHTML = zero_decimal;
			document.getElementById("withholding_tax").innerHTML = zero_decimal;
			document.getElementById("total_deductions").innerHTML = zero_decimal;
			document.getElementById("net_pay").innerHTML = zero_decimal;
			
			employmentType.value = "Private Employee";
			payPeriodDropdown.value = "Monthly";
			onSelectPayPeriod("Monthly");

			document.getElementById("sss_gsis_contribution_label").innerHTML = "SSS/GSIS Contribution"
			var textField = new mdc.textField.MDCTextField(document.querySelector('#payroll_period_daily_days_text'))
			textField.value = zero_decimal
			textField = new mdc.textField.MDCTextField(document.querySelector('#basic_pay_text'))
			textField.value = zero_decimal
			textField = new mdc.textField.MDCTextField(document.querySelector('#taxable_allowance_text'))
			textField.value = ""
			textField = new mdc.textField.MDCTextField(document.querySelector('#nontaxable_allowance_text'))
			textField.value = ""

			document.getElementById("monthly_payout").checked = true;
			document.getElementById("rates").value = year;

	 		document.getElementById("night_differential_checkbox").checked = false;
	 		showOrHideNightDifferential();
	 		
	 		document.getElementById("overtime_checkbox").checked = false;
	 		showOrHideOvertime();
	 		
			scrollToTop();
		}

		function scrollToTop() {
			const output = document.querySelector("#output");
		    output.scrollIntoView({ behavior: 'smooth' });
		}

		function composeShareText() {
			var shareText = "I used Sweldong Pinoy (https://www.sweldongpinoy.com) and got the following results:"
			shareText += "\nEmployment Type: " + employmentType.value
			shareText += "\nPayrol Period: " + payPeriodDropdown.value
			shareText += "\nBasic Pay: " + document.getElementById("result_basic_pay").textContent
			shareText += "\n\nPayroll Frequency: "

			if (document.getElementById("semimonthly_payout").checked) {
				shareText += "Semi-Monthly"
			} else if(document.getElementById("monthly_payout").checked) {
				shareText += "Monthly"
			} else if(document.getElementById("annual_payout").checked) {
				shareText += "Annual"
			}
			shareText += "\nRates: " + document.getElementById("rates").value;

			shareText += "\nTaxable Allowance: " + document.getElementById("result_taxable_allowance").textContent
			shareText += "\nNon-taxable Allowance: " + document.getElementById("result_nontaxable_allowance").textContent
			shareText += "\nNight Differential: " + document.getElementById("night_differential").textContent
			shareText += "\nOvertime Pay: " + document.getElementById("overtime_pay").textContent
			shareText += "\n\nGross Pay: " + document.getElementById("gross_pay").textContent
			shareText += "\n\nWithholding Tax: " + document.getElementById("withholding_tax").textContent
			shareText += "\n" + document.getElementById("sss_gsis_contribution_label").textContent
						+ document.getElementById("sss_gsis_contribution").textContent
			shareText += "\nPhilHealth Contribution: " + document.getElementById("philhealth_contribution").textContent
			shareText += "\nPAG-IBIG Contribution: " + document.getElementById("pagibig_contribution").textContent
			shareText += "\nTotal Deductions: " + document.getElementById("total_deductions").textContent
			shareText += "\n\nNet Pay: " + document.getElementById("net_pay").textContent

			return shareText;
		}
	